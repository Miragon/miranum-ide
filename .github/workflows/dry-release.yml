name: Dry Release

on:
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Corepack enable
        run: corepack enable

      - name: Setup NodeJS 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: yarn

      - name: Lint
        run: yarn lint

      - name: Test
        run: yarn test

      - name: Build
        run: yarn build

      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  vsce-package:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist

      - name: Setup NodeJS 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install vsce
        run: npm install -g @vscode/vsce@latest

      - name: Build vsix miranum-config-editor
        working-directory: apps/miranum-config-editor
        run: vsce package --no-dependencies --out miranum-config-editor.vsix --yarn

      - name: Build vsix miranum-console
        working-directory: apps/miranum-console
        run: vsce package --no-dependencies --out miranum-console.vsix --yarn

      - name: Build vsix miranum-jsonforms
        working-directory: apps/miranum-jsonforms
        run: vsce package --no-dependencies --out miranum-jsonforms.vsix --yarn

      - name: Build vsix miranum-modeler
        working-directory: apps/miranum-modeler
        run: vsce package --no-dependencies --out miranum-modeler.vsix --yarn

      - name: Collect vsix
        run: |
          mkdir vsix-packages
          find . -name "*.vsix" -type f -exec cp {} vsix-packages \;

      - uses: actions/upload-artifact@v4
        with:
          name: vsix-packages
          path: vsix-packages
