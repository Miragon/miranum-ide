name: Release

on:
  workflow_dispatch:
    inputs:
      release-tag:
        description: 'Release Tag'
        required: true
        default: 'release/XXX'
      miranum-cli:
        description: 'Release miranum-cli app (y/n)?'
        required: true
        default: 'y'
      miranum-console:
        description: 'Release miranum-console app (y/n)?'
        required: true
        default: 'y'
      miranum-core:
        description: 'Release miranum-core (y/n)?'
        required: true
        default: 'y'
      spring-boot-apps:
        description: 'Release spring boot services (y/n)?'
        required: true
        default: 'n'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Setup NodeJS 16
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm install
      - name: Lint
        run: npm run lint
      - name: Test
        run: npm run test
      - name: Build
        run: npm run build
      # miranum-cli
      - uses: actions/upload-artifact@v3
        with:
          name: miranum-cli
          path: dist/apps/miranum-cli
      # miranum-console
      - uses: actions/upload-artifact@v3
        with:
          name: miranum-console
          path: dist/apps/miranum-console
      # miranum-core
      - uses: actions/upload-artifact@v3
        with:
          name: miranum-core
          path: dist/libs/miranum-core
      - uses: actions/upload-artifact@v3
        with:
          name: spring-boot-apps
          path: spring-boot-apps

  create-release-tag:
    if: github.event.inputs.release-tag
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3
      - name: Create tag
        uses: tvdias/github-tagger@v0.0.2
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          tag: "${{ github.event.inputs.release-tag }}"

  # miranum-cli
  publish-miranum-console:
    if: github.event.inputs.miranum-console == 'y'
    runs-on: ubuntu-latest
    needs:
      - build
      - create-release-tag
    steps:
      - name: Setup NodeJS 16
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          registry-url: 'https://registry.npmjs.org'
      - uses: actions/download-artifact@v3
        with:
          name: miranum-console
      - name: Prepare
        run: npm install && npm install -g vsce
      - name: Build vsix
        run: vsce package
      # tbd. publish vsce
      - uses: actions/upload-artifact@v3
        with:
          name: miranum-console
          path: miranum-console-0.1.0.vsix

  # miranum-cli
  publish-miranum-cli:
    if: github.event.inputs.miranum-cli == 'y'
    runs-on: ubuntu-latest
    needs:
      - build
      - create-release-tag
    steps:
      - name: Setup NodeJS 16
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          registry-url: 'https://registry.npmjs.org'
      - uses: actions/download-artifact@v3
        with:
          name: miranum-cli
      - name: Publish
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_SECRET }}

  # miranum-core
  publish-miranum-core:
    if: github.event.inputs.miranum-core == 'y'
    runs-on: ubuntu-latest
    needs:
      - build
      - create-release-tag
    steps:
      - name: Setup NodeJS 16
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          registry-url: 'https://registry.npmjs.org'
      - uses: actions/download-artifact@v3
        with:
          name: miranum-core
      - name: Publish
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_SECRET }}

  publish-spring-boot-apps:
    if: github.event.inputs.spring-boot-apps == 'y'
    runs-on: ubuntu-latest
    needs:
      - build
      - create-release-tag
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: spring-boot-apps
      - name: Install Java and Maven
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Release maven package
        uses: samuelmeuli/action-maven-publish@v1
        with:
          directory: miranum-deployment-proxy
          gpg_private_key: ${{ secrets.PGP_PRIVATE_KEY }}
          gpg_passphrase: ${{ secrets.PGP_PRIVATE_KEY_SECRET }}
          nexus_username: ${{ secrets.NEXUS_USERNAME }}
          nexus_password: ${{ secrets.NEXUS_PASSWORD }}
      # docker
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_MIRAGON_USERNAME }}
          password: ${{ secrets.DOCKER_MIRAGON_PASSWORD  }}
      - name: Set Release version env variable
        run: |
          echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
      - name: Build and push miranum-deployment-proxy
        uses: docker/build-push-action@v2
        with:
          context: ./miranum-deployment-proxy
          push: true
          tags: miragon/miranum-deployment-proxy:${{ env.RELEASE_VERSION }}
