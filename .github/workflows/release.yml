name: Release

on:
  workflow_dispatch:
    inputs:
      release-tag:
        description: 'Release Tag'
        required: true
        default: 'release/XXX'
      miranum-cli:
        description: 'Release miranum-cli app?'
        type: boolean
        required: true
        default: true
      miranum-core:
        description: 'Release miranum-core?'
        type: boolean
        required: true
        default: true
      miranum-create-append-c7-element-templates:
        description: 'Release miranum-create-append-c7-element-templates'
        type: boolean
        required: true
        default: true
      miranum-vscode-plugins:
        description: 'Release all vscode plugins?'
        type: boolean
        required: true
        default: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: PREP / Setup yarn
        run: corepack enable

      - name: Setup NodeJS 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: PREP / Install dependencies
        run: yarn

      - name: PREP / Lint
        run: yarn lint

      - name: PREP / Test
        run: yarn test

      - name: BUILD / Build
        run: yarn build

      # miranum-cli
      - name: GIT / Upload miranum-cli
        uses: actions/upload-artifact@v4
        with:
          name: miranum-cli
          path: dist/apps/miranum-cli

      # miranum-core
      - name: GIT / Upload miranum-core
        uses: actions/upload-artifact@v4
        with:
          name: miranum-core
          path: dist/libs/miranum-core

      # miranum-create-append-c7-element-templates
      - name: GIT / Upload miranum-create-append-c7-element-templates
        uses: actions/upload-artifact@v4
        with:
          name: miranum-create-append-c7-element-templates
          path: dist/libs/miranum-create-append-c7-element-templates

      # miranum-extension-pack
      - name: GIT / Upload miranum-extension-pack
        uses: actions/upload-artifact@v4
        with:
          name: miranum-extension-pack
          path: dist/apps/miranum-extension-pack

      # miranum-config-editor
      - name: GIT / Upload miranum-config-editor
        uses: actions/upload-artifact@v4
        with:
          name: miranum-config-editor
          path: dist/apps/miranum-config-editor

      # miranum-console
      - name: GIT / Upload miranum-console
        uses: actions/upload-artifact@v4
        with:
          name: miranum-console
          path: dist/apps/miranum-console

      # miranum-jsonforms
      - name: GIT / Upload miranum-jsonforms
        uses: actions/upload-artifact@v4
        with:
          name: miranum-jsonforms
          path: dist/apps/miranum-jsonforms

      # miranum-modeler
      - name: GIT / Upload miranum-modeler
        uses: actions/upload-artifact@v4
        with:
          name: miranum-modeler
          path: dist/apps/miranum-modeler

  # miranum-cli
  publish-miranum-cli:
    if: github.event.inputs.miranum-cli == 'true'
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: GIT / Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: miranum-cli

      - name: PREP / Setup yarn
        run: corepack enable

      - name: PREP / Setup NodeJS 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: PREP / Setup .yarnrc.yml
        run: |
          yarn config set npmAuthToken $NPM_AUTH_TOKEN
          yarn config set nodeLinker node-modules
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_SECRET }}

      - name: RELEASE / Publish
        run: |
          yarn
          yarn npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_SECRET }}

  # miranum-core
  publish-miranum-core:
    if: github.event.inputs.miranum-core == 'true'
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: GIT / Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: miranum-core

      - name: PREP / Setup NodeJS 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      # - name: PREP / Setup .yarnrc.yml
      #   run: yarn config set npmAuthToken $NPM_AUTH_TOKEN
      #   env:
      #     NPM_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_SECRET }}

      - name: RELEASE / Publish
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_SECRET }}

  # miranum-create-append-c7-element-templates
  publish-miranum-create-append-c7-element-templates:
    if: github.event.inputs.miranum-create-append-c7-element-templates == 'true'
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: GIT / Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: miranum-create-append-c7-element-templates

      - name: PREP / Setup NodeJS 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      # - name: PREP / Setup .yarnrc.yml
      #   run: yarn config set npmAuthToken $NPM_AUTH_TOKEN
      #   env:
      #     NPM_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_SECRET }}

      - name: RELEASE / Publish
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_SECRET }}

  # miranum-extension-pack
  publish-miranum-extension-pack:
    if: github.event.inputs.miranum-vscode-plugins == 'true'
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: GIT / Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: miranum-extension-pack

      - name: PREP / Setup NodeJS 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: PREP / Install vsce
        run: npm install -g @vscode/vsce@latest

      - name: RELEASE / Publish extension
        run: vsce publish --yarn --no-dependencies
        env:
          VSCE_PAT: ${{ secrets.VSCE_PUBLISH }}

  # miranum-config-editor
  publish-miranum-config-editor:
    if: github.event.inputs.miranum-vscode-plugins == 'true'
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: GIT / Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: miranum-config-editor

      - name: PREP / Setup yarn
        run: corepack enable

      - name: PREP / Setup NodeJS 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: PREP / Install vsce
        run: npm install -g @vscode/vsce@latest

      - name: RELEASE / Publish extension
        run: vsce publish --yarn --no-dependencies
        env:
          VSCE_PAT: ${{ secrets.VSCE_PUBLISH }}

  # miranum-console
  publish-miranum-console:
    if: github.event.inputs.miranum-vscode-plugins == 'true'
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: GIT / Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: miranum-console

      - name: PREP / Setup yarn
        run: corepack enable

      - name: PREP / Setup NodeJS 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: PREP / Install vsce
        run: npm install -g @vscode/vsce@latest

      - name: RELEASE / Publish extension
        run: vsce publish --yarn --no-dependencies
        env:
          VSCE_PAT: ${{ secrets.VSCE_PUBLISH }}

  # miranum-jsonforms
  publish-miranum-jsonforms:
    if: github.event.inputs.miranum-vscode-plugins == 'true'
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: GIT / Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: miranum-jsonforms

      - name: PREP / Setup yarn
        run: corepack enable

      - name: PREP / Setup NodeJS 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: PREP / Install vsce
        run: npm install -g @vscode/vsce@latest

      - name: RELEASE / Publish extension
        run: vsce publish --yarn --no-dependencies
        env:
          VSCE_PAT: ${{ secrets.VSCE_PUBLISH }}

  # miranum-modeler
  publish-miranum-modeler:
    if: github.event.inputs.miranum-vscode-plugins == 'true'
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: GIT / Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: miranum-modeler

      - name: PREP / Setup yarn
        run: corepack enable

      - name: PREP / Setup NodeJS 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: PREP / Install vsce
        run: npm install -g @vscode/vsce@latest

      - name: RELEASE / Publish extension
        run: vsce publish --yarn --no-dependencies
        env:
          VSCE_PAT: ${{ secrets.VSCE_PUBLISH }}

  create-release:
    if: github.event.inputs.release-tag
    needs:
      - publish-miranum-cli
      - publish-miranum-config-editor
      - publish-miranum-console
      - publish-miranum-core
      - publish-miranum-create-append-c7-element-templates
      - publish-miranum-extension-pack
      - publish-miranum-jsonforms
      - publish-miranum-modeler
    uses: ./.github/workflows/workflow-github-release.yml
    with:
      release-version: ${{ github.event.inputs.release-tag }}
    secrets: inherit
